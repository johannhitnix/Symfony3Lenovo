Windows PowerShell
Copyright (C) Microsoft Corporation. All rights reserved.

PS C:\xampp7.0\htdocs\sites\mySymfony> php bin/console
Symfony 3.4.18 (kernel: app, env: dev, debug: true)

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display this help message
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi            Force ANSI output
      --no-ansi         Disable ANSI output
  -n, --no-interaction  Do not ask any interactive question
  -e, --env=ENV         The Environment name. [default: "dev"]
      --no-debug        Switches off debug mode.
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  about                                   Displays information about the current project
  help                                    Displays help for a command
  list                                    Lists commands
 assets
  assets:install                          Installs bundles web assets under a public directory
 cache
  cache:clear                             Clears the cache
  cache:pool:clear                        Clears cache pools
  cache:pool:prune                        Prunes cache pools
  cache:warmup                            Warms up an empty cache
 config
  config:dump-reference                   Dumps the default configuration for an extension
 debug
  debug:autowiring                        Lists classes/interfaces you can use for autowiring
  debug:config                            Dumps the current configuration for an extension
  debug:container                         Displays current services for an application
  debug:event-dispatcher                  Displays configured listeners for an application
  debug:form                              Displays form type information
  debug:router                            Displays current routes for an application
  debug:swiftmailer                       [swiftmailer:debug] Displays current mailers for an application
  debug:twig                              Shows a list of twig functions, filters, globals and tests
 doctrine
  doctrine:cache:clear-collection-region  Clear a second-level cache collection region.
  doctrine:cache:clear-entity-region      Clear a second-level cache entity region.
  doctrine:cache:clear-metadata           Clears all metadata cache for an entity manager
  doctrine:cache:clear-query              Clears all query cache for an entity manager
  doctrine:cache:clear-query-region       Clear a second-level cache query region.
  doctrine:cache:clear-result             Clears result cache for an entity manager
  doctrine:cache:contains                 Check if a cache entry exists
  doctrine:cache:delete                   Delete a cache entry
  doctrine:cache:flush                    [doctrine:cache:clear] Flush a given cache
  doctrine:cache:stats                    Get stats on a given cache provider
  doctrine:database:create                Creates the configured database
  doctrine:database:drop                  Drops the configured database
  doctrine:database:import                Import SQL file(s) directly to Database.
  doctrine:ensure-production-settings     Verify that Doctrine is properly configured for a production environment.
  doctrine:generate:crud                  [generate:doctrine:crud] Generates a CRUD based on a Doctrine entity
  doctrine:generate:entities              [generate:doctrine:entities] Generates entity classes and method stubs from your mapping information
  doctrine:generate:entity                [generate:doctrine:entity] Generates a new Doctrine entity inside a bundle
  doctrine:generate:form                  [generate:doctrine:form] Generates a form type class based on a Doctrine entity
  doctrine:mapping:convert                [orm:convert:mapping] Convert mapping information between supported formats.
  doctrine:mapping:import                 Imports mapping information from an existing database
  doctrine:mapping:info
  doctrine:query:dql                      Executes arbitrary DQL directly from the command line.
  doctrine:query:sql                      Executes arbitrary SQL directly from the command line.
  doctrine:schema:create                  Executes (or dumps) the SQL needed to generate the database schema
  doctrine:schema:drop                    Executes (or dumps) the SQL needed to drop the current database schema
  doctrine:schema:update                  Executes (or dumps) the SQL needed to update the database schema to match the current mapping metadata.
  doctrine:schema:validate                Validate the mapping files.
 generate
  generate:bundle                         Generates a bundle
  generate:command                        Generates a console command
  generate:controller                     Generates a controller
 lint
  lint:twig                               Lints a template and outputs encountered errors
  lint:xliff                              Lints a XLIFF file and outputs encountered errors
  lint:yaml                               Lints a file and outputs encountered errors
 router
  router:match                            Helps debug routes by simulating a path info match
 security
  security:check                          Checks security issues in your project dependencies
  security:encode-password                Encodes a password.
 server
  server:log                              Starts a log server that displays logs in real time
  server:run                              Runs a local web server
  server:start                            Starts a local web server in the background
  server:status                           Outputs the status of the local web server
  server:stop                             Stops the local web server that was started with the server:start command
 swiftmailer
  swiftmailer:email:send                  Send simple email message
  swiftmailer:spool:send                  Sends emails from the spool
PS C:\xampp7.0\htdocs\sites\mySymfony> php bin/console  doctrine:database:create
Created database `symdb` for connection named default
PS C:\xampp7.0\htdocs\sites\mySymfony> php bin/console
Symfony 3.4.18 (kernel: app, env: dev, debug: true)

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display this help message
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi            Force ANSI output
      --no-ansi         Disable ANSI output
  -n, --no-interaction  Do not ask any interactive question
  -e, --env=ENV         The Environment name. [default: "dev"]
      --no-debug        Switches off debug mode.
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  about                                   Displays information about the current project
  help                                    Displays help for a command
  list                                    Lists commands
 assets
  assets:install                          Installs bundles web assets under a public directory
 cache
  cache:clear                             Clears the cache
  cache:pool:clear                        Clears cache pools
  cache:pool:prune                        Prunes cache pools
  cache:warmup                            Warms up an empty cache
 config
  config:dump-reference                   Dumps the default configuration for an extension
 debug
  debug:autowiring                        Lists classes/interfaces you can use for autowiring
  debug:config                            Dumps the current configuration for an extension
  debug:container                         Displays current services for an application
  debug:event-dispatcher                  Displays configured listeners for an application
  debug:form                              Displays form type information
  debug:router                            Displays current routes for an application
  debug:swiftmailer                       [swiftmailer:debug] Displays current mailers for an application
  debug:twig                              Shows a list of twig functions, filters, globals and tests
 doctrine
  doctrine:cache:clear-collection-region  Clear a second-level cache collection region.
  doctrine:cache:clear-entity-region      Clear a second-level cache entity region.
  doctrine:cache:clear-metadata           Clears all metadata cache for an entity manager
  doctrine:cache:clear-query              Clears all query cache for an entity manager
  doctrine:cache:clear-query-region       Clear a second-level cache query region.
  doctrine:cache:clear-result             Clears result cache for an entity manager
  doctrine:cache:contains                 Check if a cache entry exists
  doctrine:cache:delete                   Delete a cache entry
  doctrine:cache:flush                    [doctrine:cache:clear] Flush a given cache
  doctrine:cache:stats                    Get stats on a given cache provider
  doctrine:database:create                Creates the configured database
  doctrine:database:drop                  Drops the configured database
  doctrine:database:import                Import SQL file(s) directly to Database.
  doctrine:ensure-production-settings     Verify that Doctrine is properly configured for a production environment.
  doctrine:generate:crud                  [generate:doctrine:crud] Generates a CRUD based on a Doctrine entity
  doctrine:generate:entities              [generate:doctrine:entities] Generates entity classes and method stubs from your mapping information
  doctrine:generate:entity                [generate:doctrine:entity] Generates a new Doctrine entity inside a bundle
  doctrine:generate:form                  [generate:doctrine:form] Generates a form type class based on a Doctrine entity
  doctrine:mapping:convert                [orm:convert:mapping] Convert mapping information between supported formats.
  doctrine:mapping:import                 Imports mapping information from an existing database
  doctrine:mapping:info
  doctrine:query:dql                      Executes arbitrary DQL directly from the command line.
  doctrine:query:sql                      Executes arbitrary SQL directly from the command line.
  doctrine:schema:create                  Executes (or dumps) the SQL needed to generate the database schema
  doctrine:schema:drop                    Executes (or dumps) the SQL needed to drop the current database schema
  doctrine:schema:update                  Executes (or dumps) the SQL needed to update the database schema to match the current mapping metadata.
  doctrine:schema:validate                Validate the mapping files.
 generate
  generate:bundle                         Generates a bundle
  generate:command                        Generates a console command
  generate:controller                     Generates a controller
 lint
  lint:twig                               Lints a template and outputs encountered errors
  lint:xliff                              Lints a XLIFF file and outputs encountered errors
  lint:yaml                               Lints a file and outputs encountered errors
 router
  router:match                            Helps debug routes by simulating a path info match
 security
  security:check                          Checks security issues in your project dependencies
  security:encode-password                Encodes a password.
 server
  server:log                              Starts a log server that displays logs in real time
  server:run                              Runs a local web server
  server:start                            Starts a local web server in the background
  server:status                           Outputs the status of the local web server
  server:stop                             Stops the local web server that was started with the server:start command
 swiftmailer
  swiftmailer:email:send                  Send simple email message
  swiftmailer:spool:send                  Sends emails from the spool
PS C:\xampp7.0\htdocs\sites\mySymfony> php bin/console   doctrine:generate:entity


  Welcome to the Doctrine2 entity generator



This command helps you generate Doctrine2 entities.

First, you need to give the entity name you want to generate.
You must use the shortcut notation like AcmeBlogBundle:Post.

The Entity shortcut name: AppBundle.php
 The entity name isn't valid ("AppBundle.php" given, expecting something like AcmeBlogBundle:Blog/Post)
The Entity shortcut name: AppBundle:AppBundle.php
 The entity name isn't valid ("AppBundle:AppBundle.php" given, expecting something like AcmeBlogBundle:Blog/Post)
The Entity shortcut name: AppBundle
 The entity name isn't valid ("AppBundle" given, expecting something like AcmeBlogBundle:Blog/Post)
The Entity shortcut name: AppBundle/AppBundle.php
 The entity name isn't valid ("AppBundle/AppBundle.php" given, expecting something like AcmeBlogBundle:Blog/Post)
The Entity shortcut name: AppBundle
 The entity name isn't valid ("AppBundle" given, expecting something like AcmeBlogBundle:Blog/Post)
The Entity shortcut name: AppBundle: Usuario --fields="documento:integer nombres:string(length=80) apellidos:string(length=80) correo:string(40) id_rol:integer"
 The entity name isn't valid ("AppBundle: Usuario --fields="documento:integer nombres:string(length=80) apellidos:string(length=80) correo:string(40) id_rol:integer"" given, expecting something like AcmeBlogBundle:Blog/Post)
The Entity shortcut name: AppBundle: Usuario --fields="documento:integer nombres:string(length=80) apellidos:string(length=80) correo:string(40) id_rol:integer"
 The entity name isn't valid ("AppBundle: Usuario --fields="documento:integer nombres:string(length=80) apellidos:string(length=80) correo:string(40) id_rol:integer"" given, expecting something like AcmeBlogBundle:Blog/Post)
The Entity shortcut name: AppBundle:AppBundle.php/Usuario --fields="documento:integer nombres:string(length=80) apellidos:string(length=80) correo:string(40) id_rol:integer"
 The entity name isn't valid ("AppBundle:AppBundle.php/Usuario --fields="documento:integer nombres:string(length=80) apellidos:string(length=80) correo:string(40) id_rol:integer"" given, expecting something like AcmeBlogBundle:Blog/Post)
The Entity shortcut name: AppBundle:Usuario --fields="documento:integer nombres:string(length=80) apellidos:string(length=80) correo:string(40) id_rol:integer"
 The entity name isn't valid ("AppBundle:Usuario --fields="documento:integer nombres:string(length=80) apellidos:string(length=80) correo:string(40) id_rol:integer"" given, expecting something like AcmeBlogBundle:Blog/Post)
The Entity shortcut name: AppBundle:Usuario

Determine the format to use for the mapping information.

Configuration format (yml, xml, php, or annotation) [annotation]:

Instead of starting with a blank entity, you can add some fields now.
Note that the primary key will be added automatically (named id).

Available types: array, simple_array, json_array, object,
boolean, integer, smallint, bigint, string, text, datetime, datetimetz,
date, time, decimal, float, binary, blob, guid.

New field name (press <return> to stop adding fields): documento
Field type [string]:
Field length [255]: 20
Is nullable [false]:
Unique [false]: true

New field name (press <return> to stop adding fields): nombre
Field type [string]:
Field length [255]: 40
Is nullable [false]: true
Unique [false]:

New field name (press <return> to stop adding fields): apellido
Field type [string]:
Field length [255]: 40
Is nullable [false]: true
Unique [false]:

New field name (press <return> to stop adding fields): correo
Field type [string]:
Field length [255]: 40
Is nullable [false]:
Unique [false]:

New field name (press <return> to stop adding fields):


  Entity generation


  created .\src\AppBundle/Entity/
  created .\src\AppBundle/Entity/Usuario.php
> Generating entity class C:\xampp7.0\htdocs\sites\mySymfony\src\AppBundle\Entity\Usuario.php: OK!
> Generating repository class C:\xampp7.0\htdocs\sites\mySymfony\src\AppBundle\Repository\UsuarioRepository.php: OK!


  Everything is OK! Now get to work :).


PS C:\xampp7.0\htdocs\sites\mySymfony> php bin/console
Symfony 3.4.18 (kernel: app, env: dev, debug: true)

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display this help message
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi            Force ANSI output
      --no-ansi         Disable ANSI output
  -n, --no-interaction  Do not ask any interactive question
  -e, --env=ENV         The Environment name. [default: "dev"]
      --no-debug        Switches off debug mode.
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  about                                   Displays information about the current project
  help                                    Displays help for a command
  list                                    Lists commands
 assets
  assets:install                          Installs bundles web assets under a public directory
 cache
  cache:clear                             Clears the cache
  cache:pool:clear                        Clears cache pools
  cache:pool:prune                        Prunes cache pools
  cache:warmup                            Warms up an empty cache
 config
  config:dump-reference                   Dumps the default configuration for an extension
 debug
  debug:autowiring                        Lists classes/interfaces you can use for autowiring
  debug:config                            Dumps the current configuration for an extension
  debug:container                         Displays current services for an application
  debug:event-dispatcher                  Displays configured listeners for an application
  debug:form                              Displays form type information
  debug:router                            Displays current routes for an application
  debug:swiftmailer                       [swiftmailer:debug] Displays current mailers for an application
  debug:twig                              Shows a list of twig functions, filters, globals and tests
 doctrine
  doctrine:cache:clear-collection-region  Clear a second-level cache collection region.
  doctrine:cache:clear-entity-region      Clear a second-level cache entity region.
  doctrine:cache:clear-metadata           Clears all metadata cache for an entity manager
  doctrine:cache:clear-query              Clears all query cache for an entity manager
  doctrine:cache:clear-query-region       Clear a second-level cache query region.
  doctrine:cache:clear-result             Clears result cache for an entity manager
  doctrine:cache:contains                 Check if a cache entry exists
  doctrine:cache:delete                   Delete a cache entry
  doctrine:cache:flush                    [doctrine:cache:clear] Flush a given cache
  doctrine:cache:stats                    Get stats on a given cache provider
  doctrine:database:create                Creates the configured database
  doctrine:database:drop                  Drops the configured database
  doctrine:database:import                Import SQL file(s) directly to Database.
  doctrine:ensure-production-settings     Verify that Doctrine is properly configured for a production environment.
  doctrine:generate:crud                  [generate:doctrine:crud] Generates a CRUD based on a Doctrine entity
  doctrine:generate:entities              [generate:doctrine:entities] Generates entity classes and method stubs from your mapping information
  doctrine:generate:entity                [generate:doctrine:entity] Generates a new Doctrine entity inside a bundle
  doctrine:generate:form                  [generate:doctrine:form] Generates a form type class based on a Doctrine entity
  doctrine:mapping:convert                [orm:convert:mapping] Convert mapping information between supported formats.
  doctrine:mapping:import                 Imports mapping information from an existing database
  doctrine:mapping:info
  doctrine:query:dql                      Executes arbitrary DQL directly from the command line.
  doctrine:query:sql                      Executes arbitrary SQL directly from the command line.
  doctrine:schema:create                  Executes (or dumps) the SQL needed to generate the database schema
  doctrine:schema:drop                    Executes (or dumps) the SQL needed to drop the current database schema
  doctrine:schema:update                  Executes (or dumps) the SQL needed to update the database schema to match the current mapping metadata.
  doctrine:schema:validate                Validate the mapping files.
 generate
  generate:bundle                         Generates a bundle
  generate:command                        Generates a console command
  generate:controller                     Generates a controller
 lint
  lint:twig                               Lints a template and outputs encountered errors
  lint:xliff                              Lints a XLIFF file and outputs encountered errors
  lint:yaml                               Lints a file and outputs encountered errors
 router
  router:match                            Helps debug routes by simulating a path info match
 security
  security:check                          Checks security issues in your project dependencies
  security:encode-password                Encodes a password.
 server
  server:log                              Starts a log server that displays logs in real time
  server:run                              Runs a local web server
  server:start                            Starts a local web server in the background
  server:status                           Outputs the status of the local web server
  server:stop                             Stops the local web server that was started with the server:start command
 swiftmailer
  swiftmailer:email:send                  Send simple email message
  swiftmailer:spool:send                  Sends emails from the spool
PS C:\xampp7.0\htdocs\sites\mySymfony> d
d : The term 'd' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was
included, verify that the path is correct and try again.
At line:1 char:1
+ d
+ ~
    + CategoryInfo          : ObjectNotFound: (d:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\xampp7.0\htdocs\sites\mySymfony>  e
e : The term 'e' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was
included, verify that the path is correct and try again.
At line:1 char:2
+  e
+  ~
    + CategoryInfo          : ObjectNotFound: (e:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\xampp7.0\htdocs\sites\mySymfony> doctrine:generate:entity
doctrine:generate:entity : The term 'doctrine:generate:entity' is not recognized as the name of a cmdlet, function, script file, or operable program. Check
the spelling of the name, or if a path was included, verify that the path is correct and try again.
At line:1 char:1
+ doctrine:generate:entity
+ ~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (doctrine:generate:entity:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\xampp7.0\htdocs\sites\mySymfony> php bin/console doctrine:generate:entity


  Welcome to the Doctrine2 entity generator



This command helps you generate Doctrine2 entities.

First, you need to give the entity name you want to generate.
You must use the shortcut notation like AcmeBlogBundle:Post.

The Entity shortcut name: AppBundle:Rol

Determine the format to use for the mapping information.

Configuration format (yml, xml, php, or annotation) [annotation]:

Instead of starting with a blank entity, you can add some fields now.
Note that the primary key will be added automatically (named id).

Available types: array, simple_array, json_array, object,
boolean, integer, smallint, bigint, string, text, datetime, datetimetz,
date, time, decimal, float, binary, blob, guid.

New field name (press <return> to stop adding fields): id
 Field "id" is already defined.
New field name (press <return> to stop adding fields): nombre
Field type [string]:
Field length [255]: 40
Is nullable [false]:
Unique [false]: true

New field name (press <return> to stop adding fields):


  Entity generation


  created .\src\AppBundle/Entity/Rol.php
> Generating entity class C:\xampp7.0\htdocs\sites\mySymfony\src\AppBundle\Entity\Rol.php: OK!
> Generating repository class C:\xampp7.0\htdocs\sites\mySymfony\src\AppBundle\Repository\RolRepository.php: OK!


  Everything is OK! Now get to work :).


PS C:\xampp7.0\htdocs\sites\mySymfony> php bin/console
Symfony 3.4.18 (kernel: app, env: dev, debug: true)

Usage:
  command [options] [arguments]

Options:
  -h, --help            Display this help message
  -q, --quiet           Do not output any message
  -V, --version         Display this application version
      --ansi            Force ANSI output
      --no-ansi         Disable ANSI output
  -n, --no-interaction  Do not ask any interactive question
  -e, --env=ENV         The Environment name. [default: "dev"]
      --no-debug        Switches off debug mode.
  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug

Available commands:
  about                                   Displays information about the current project
  help                                    Displays help for a command
  list                                    Lists commands
 assets
  assets:install                          Installs bundles web assets under a public directory
 cache
  cache:clear                             Clears the cache
  cache:pool:clear                        Clears cache pools
  cache:pool:prune                        Prunes cache pools
  cache:warmup                            Warms up an empty cache
 config
  config:dump-reference                   Dumps the default configuration for an extension
 debug
  debug:autowiring                        Lists classes/interfaces you can use for autowiring
  debug:config                            Dumps the current configuration for an extension
  debug:container                         Displays current services for an application
  debug:event-dispatcher                  Displays configured listeners for an application
  debug:form                              Displays form type information
  debug:router                            Displays current routes for an application
  debug:swiftmailer                       [swiftmailer:debug] Displays current mailers for an application
  debug:twig                              Shows a list of twig functions, filters, globals and tests
 doctrine
  doctrine:cache:clear-collection-region  Clear a second-level cache collection region.
  doctrine:cache:clear-entity-region      Clear a second-level cache entity region.
  doctrine:cache:clear-metadata           Clears all metadata cache for an entity manager
  doctrine:cache:clear-query              Clears all query cache for an entity manager
  doctrine:cache:clear-query-region       Clear a second-level cache query region.
  doctrine:cache:clear-result             Clears result cache for an entity manager
  doctrine:cache:contains                 Check if a cache entry exists
  doctrine:cache:delete                   Delete a cache entry
  doctrine:cache:flush                    [doctrine:cache:clear] Flush a given cache
  doctrine:cache:stats                    Get stats on a given cache provider
  doctrine:database:create                Creates the configured database
  doctrine:database:drop                  Drops the configured database
  doctrine:database:import                Import SQL file(s) directly to Database.
  doctrine:ensure-production-settings     Verify that Doctrine is properly configured for a production environment.
  doctrine:generate:crud                  [generate:doctrine:crud] Generates a CRUD based on a Doctrine entity
  doctrine:generate:entities              [generate:doctrine:entities] Generates entity classes and method stubs from your mapping information
  doctrine:generate:entity                [generate:doctrine:entity] Generates a new Doctrine entity inside a bundle
  doctrine:generate:form                  [generate:doctrine:form] Generates a form type class based on a Doctrine entity
  doctrine:mapping:convert                [orm:convert:mapping] Convert mapping information between supported formats.
  doctrine:mapping:import                 Imports mapping information from an existing database
  doctrine:mapping:info
  doctrine:query:dql                      Executes arbitrary DQL directly from the command line.
  doctrine:query:sql                      Executes arbitrary SQL directly from the command line.
  doctrine:schema:create                  Executes (or dumps) the SQL needed to generate the database schema
  doctrine:schema:drop                    Executes (or dumps) the SQL needed to drop the current database schema
  doctrine:schema:update                  Executes (or dumps) the SQL needed to update the database schema to match the current mapping metadata.
  doctrine:schema:validate                Validate the mapping files.
 generate
  generate:bundle                         Generates a bundle
  generate:command                        Generates a console command
  generate:controller                     Generates a controller
 lint
  lint:twig                               Lints a template and outputs encountered errors
  lint:xliff                              Lints a XLIFF file and outputs encountered errors
  lint:yaml                               Lints a file and outputs encountered errors
 router
  router:match                            Helps debug routes by simulating a path info match
 security
  security:check                          Checks security issues in your project dependencies
  security:encode-password                Encodes a password.
 server
  server:log                              Starts a log server that displays logs in real time
  server:run                              Runs a local web server
  server:start                            Starts a local web server in the background
  server:status                           Outputs the status of the local web server
  server:stop                             Stops the local web server that was started with the server:start command
 swiftmailer
  swiftmailer:email:send                  Send simple email message
  swiftmailer:spool:send                  Sends emails from the spool
PS C:\xampp7.0\htdocs\sites\mySymfony> php bin/console doctrine:generate:entities


  Not enough arguments (missing: "name").


doctrine:generate:entities [--path PATH] [--no-backup] [-h|--help] [-q|--quiet] [-v|vv|vvv|--verbose] [-V|--version] [--ansi] [--no-ansi] [-n|--no-interaction] [-e|--env ENV] [--no-debug] [--] <command> <name>

PS C:\xampp7.0\htdocs\sites\mySymfony> php bin/console doctrine:generate:entities


  Not enough arguments (missing: "name").


doctrine:generate:entities [--path PATH] [--no-backup] [-h|--help] [-q|--quiet] [-v|vv|vvv|--verbose] [-V|--version] [--ansi] [--no-ansi] [-n|--no-interaction] [-e|--env ENV] [--no-debug] [--] <command> <name>

PS C:\xampp7.0\htdocs\sites\mySymfony> php bin/console doctrine:generate:entities AppBundle
 NOTE: The doctrine:generate:entities command has been deprecated.
       To read more about the differences between anemic and rich models go here http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/tutorials/getting-started.html#adding-behavior-to-entities.
       If you wish to generate your entities, use make:entity --regenerate from MakerBundle instead.
Generating entities for bundle "AppBundle"

In AnnotationException.php line 54:

  [Semantical Error] The annotation "@ManyToOne" in property AppBundle\Entity\Usuario::$rolId was never imported. Did you maybe forget to add a "use" statem
  ent for this annotation?


doctrine:generate:entities [--path PATH] [--no-backup] [-h|--help] [-q|--quiet] [-v|vv|vvv|--verbose] [-V|--version] [--ansi] [--no-ansi] [-n|--no-interaction] [-e|--env ENV] [--no-debug] [--] <command> <name>

PS C:\xampp7.0\htdocs\sites\mySymfony> php bin/console doctrine:generate:entities AppBundle
 NOTE: The doctrine:generate:entities command has been deprecated.
       To read more about the differences between anemic and rich models go here http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/tutorials/getting-started.html#adding-behavior-to-entities.
       If you wish to generate your entities, use make:entity --regenerate from MakerBundle instead.
Generating entities for bundle "AppBundle"
  > backing up Rol.php to Rol.php~
  > generating AppBundle\Entity\Rol
  > backing up Usuario.php to Usuario.php~
  > generating AppBundle\Entity\Usuario
PS C:\xampp7.0\htdocs\sites\mySymfony> php bin/console doctrine:schema:update
ATTENTION: This operation should not be executed in a production environment.
           Use the incremental update to detect changes during development and use
           the SQL DDL provided to manually update your database in production.

The Schema-Tool would execute "3" queries to update the database.
Please run the operation by passing one - or both - of the following options:
    doctrine:schema:update --force to execute the command
    doctrine:schema:update --dump-sql to dump the SQL statements to the screen
PS C:\xampp7.0\htdocs\sites\mySymfony> php bin/console doctrine:schema:update --force
Updating database schema...
Database schema updated successfully! "3" queries were executed
PS C:\xampp7.0\htdocs\sites\mySymfony> php bin/console doctrine:generate:crud


  Welcome to the Doctrine2 CRUD generator



This command helps you generate CRUD controllers and templates.

First, give the name of the existing entity for which you want to generate a CRUD
(use the shortcut notation like AcmeBlogBundle:Post)

The Entity shortcut name: AppBundle:rol

By default, the generator creates two actions: list and show.
You can also ask it to generate "write" actions: new, update, and delete.

Do you want to generate the "write" actions [no]? yes

Determine the format to use for the generated CRUD.

Configuration format (yml, xml, php, or annotation) [annotation]:

Determine the routes prefix (all the routes will be "mounted" under this
prefix: /prefix/, /prefix/new, ...).

Routes prefix [/rol]:


  Summary before generation


You are going to generate a CRUD controller for "AppBundle:rol"
using the "annotation" format.

Do you confirm generation [yes]?


  CRUD generation


  created .\src\AppBundle/Controller//rolController.php
  created .\app/Resources/views/rol/
  created .\app/Resources/views/rol/index.html.twig
  created .\app/Resources/views/rol/show.html.twig
  created .\app/Resources/views/rol/new.html.twig
  created .\app/Resources/views/rol/edit.html.twig
  created .\src\AppBundle/Tests/Controller/
  created .\src\AppBundle/Tests/Controller//rolControllerTest.php
Generating the CRUD code: OK
  created .\src\AppBundle/Form/
  created .\src\AppBundle/Form/rolType.php
Generating the Form code: OK
Updating the routing: OK


  Everything is OK! Now get to work :).


PS C:\xampp7.0\htdocs\sites\mySymfony> php bin/console server:run

In DebugClassLoader.php line 182:

  Case mismatch between loaded and declared class names: "AppBundle\Entity\rol" vs "AppBundle\Entity\Rol".


PS C:\xampp7.0\htdocs\sites\mySymfony> php bin/console server:run

In DebugClassLoader.php line 182:

  Case mismatch between loaded and declared class names: "AppBundle\Entity\rol" vs "AppBundle\Entity\Rol".


PS C:\xampp7.0\htdocs\sites\mySymfony> php bin/console c:c

In DebugClassLoader.php line 182:

  Case mismatch between loaded and declared class names: "AppBundle\Entity\rol" vs "AppBundle\Entity\Rol".


PS C:\xampp7.0\htdocs\sites\mySymfony> php bin/console doctrine:generate:crud


  Welcome to the Doctrine2 CRUD generator



This command helps you generate CRUD controllers and templates.

First, give the name of the existing entity for which you want to generate a CRUD
(use the shortcut notation like AcmeBlogBundle:Post)

The Entity shortcut name: AppBundle:Rol

By default, the generator creates two actions: list and show.
You can also ask it to generate "write" actions: new, update, and delete.

Do you want to generate the "write" actions [no]? y

Determine the format to use for the generated CRUD.

Configuration format (yml, xml, php, or annotation) [annotation]:

Determine the routes prefix (all the routes will be "mounted" under this
prefix: /prefix/, /prefix/new, ...).

Routes prefix [/rol]:


  Summary before generation


You are going to generate a CRUD controller for "AppBundle:Rol"
using the "annotation" format.

Do you confirm generation [yes]?


  CRUD generation


  created .\src\AppBundle/Controller//RolController.php
  created .\app/Resources/views/rol/
  created .\app/Resources/views/rol/index.html.twig
  created .\app/Resources/views/rol/show.html.twig
  created .\app/Resources/views/rol/new.html.twig
  created .\app/Resources/views/rol/edit.html.twig
  updated .\src\AppBundle/Tests/Controller//RolControllerTest.php
Generating the CRUD code: OK

In DoctrineFormGenerator.php line 68:

  Unable to generate the RolType form class as it already exists under the C:\xampp7.0\htdocs\sites\mySymfony\src\AppBundle/Form/RolType.php file


doctrine:generate:crud [--entity [ENTITY]] [--route-prefix ROUTE-PREFIX] [--with-write] [--format FORMAT] [--overwrite] [-h|--help] [-q|--quiet] [-v|vv|vvv|--verbose] [-V|--version] [--ansi] [--no-ansi] [-n|--no-interaction] [-e|--env ENV] [--no-debug] [--] <command> [<entity>]

PS C:\xampp7.0\htdocs\sites\mySymfony> php bin/console server:run

 [OK] Server listening on http://127.0.0.1:8000

 // Quit the server with CONTROL-C.

[Tue Nov  6 12:02:19 2018] 127.0.0.1:61309 [200]: /
[Tue Nov  6 12:02:28 2018] 127.0.0.1:61313 [200]: /_wdt/2e7584
[Tue Nov  6 12:02:28 2018] 127.0.0.1:61314 [200]: /favicon.ico
[Tue Nov  6 12:03:05 2018] 127.0.0.1:61328 [301]: /rol
[Tue Nov  6 12:03:08 2018] 127.0.0.1:61329 [200]: /rol/
[Tue Nov  6 12:03:10 2018] 127.0.0.1:61331 [200]: /_wdt/f318b8
[Tue Nov  6 12:03:17 2018] 127.0.0.1:61332 [500]: /rol/new
[Tue Nov  6 12:03:19 2018] 127.0.0.1:61333 [200]: /_wdt/81ec62
[Tue Nov  6 12:04:01 2018] 127.0.0.1:61346 [200]: /favicon.ico
PS C:\xampp7.0\htdocs\sites\mySymfony> php bin/console server:run

In DebugClassLoader.php line 209:

  Case mismatch between class and real file names: "AppBundle\Form\rolType.php" vs "AppBundle\Form\RolType.php" in "C:\xampp7.0\htdocs\sites\mySymfony\src\"
  .


PS C:\xampp7.0\htdocs\sites\mySymfony> php bin/console server:run

 [OK] Server listening on http://127.0.0.1:8000

 // Quit the server with CONTROL-C.

[Tue Nov  6 12:05:14 2018] 127.0.0.1:61353 [200]: /rol/
[Tue Nov  6 12:05:16 2018] 127.0.0.1:61354 [200]: /_wdt/83eeec
[Tue Nov  6 12:05:21 2018] 127.0.0.1:61357 [500]: /rol/new
[Tue Nov  6 12:05:22 2018] 127.0.0.1:61358 [200]: /_wdt/85a004
PS C:\xampp7.0\htdocs\sites\mySymfony> php bin/console doctrine:generate:crud


  Welcome to the Doctrine2 CRUD generator



This command helps you generate CRUD controllers and templates.

First, give the name of the existing entity for which you want to generate a CRUD
(use the shortcut notation like AcmeBlogBundle:Post)

The Entity shortcut name: AppBundle:Rol

By default, the generator creates two actions: list and show.
You can also ask it to generate "write" actions: new, update, and delete.

Do you want to generate the "write" actions [no]? y

Determine the format to use for the generated CRUD.

Configuration format (yml, xml, php, or annotation) [annotation]:

Determine the routes prefix (all the routes will be "mounted" under this
prefix: /prefix/, /prefix/new, ...).

Routes prefix [/rol]:


  Summary before generation


You are going to generate a CRUD controller for "AppBundle:Rol"
using the "annotation" format.

Do you confirm generation [yes]?


  CRUD generation


  created .\src\AppBundle/Controller//RolController.php
  created .\app/Resources/views/rol/
  created .\app/Resources/views/rol/index.html.twig
  created .\app/Resources/views/rol/show.html.twig
  created .\app/Resources/views/rol/new.html.twig
  created .\app/Resources/views/rol/edit.html.twig
  updated .\src\AppBundle/Tests/Controller//RolControllerTest.php
Generating the CRUD code: OK
  created .\src\AppBundle/Form/RolType.php
Generating the Form code: OK
Updating the routing: OK


  Everything is OK! Now get to work :).


PS C:\xampp7.0\htdocs\sites\mySymfony> php bin/console server:run

 [OK] Server listening on http://127.0.0.1:8000

 // Quit the server with CONTROL-C.

[Tue Nov  6 12:07:47 2018] 127.0.0.1:61383 [200]: /rol/new
[Tue Nov  6 12:07:48 2018] 127.0.0.1:61384 [200]: /_wdt/db32ab
[Tue Nov  6 12:08:09 2018] 127.0.0.1:61388 [302]: /rol/new
[Tue Nov  6 12:08:12 2018] 127.0.0.1:61391 [200]: /rol/1
[Tue Nov  6 12:08:13 2018] 127.0.0.1:61393 [200]: /_wdt/68ff14
[Tue Nov  6 12:08:26 2018] 127.0.0.1:61394 [200]: /rol/
[Tue Nov  6 12:08:27 2018] 127.0.0.1:61395 [200]: /_wdt/92e8b4
[Tue Nov  6 12:09:01 2018] 127.0.0.1:61399 [200]: /rol/
[Tue Nov  6 12:09:02 2018] 127.0.0.1:61398 [200]: /_wdt/f91ba7
[Tue Nov  6 12:09:02 2018] 127.0.0.1:61401 [200]: /favicon.ico
PS C:\xampp7.0\htdocs\sites\mySymfony>
















































PS C:\xampp7.0\htdocs\sites\mySymfony> php bin/console doctrine:generate:crud


  Welcome to the Doctrine2 CRUD generator



This command helps you generate CRUD controllers and templates.

First, give the name of the existing entity for which you want to generate a CRUD
(use the shortcut notation like AcmeBlogBundle:Post)

The Entity shortcut name: AppBundle:Usuario

By default, the generator creates two actions: list and show.
You can also ask it to generate "write" actions: new, update, and delete.

Do you want to generate the "write" actions [no]? y

Determine the format to use for the generated CRUD.

Configuration format (yml, xml, php, or annotation) [annotation]:

Determine the routes prefix (all the routes will be "mounted" under this
prefix: /prefix/, /prefix/new, ...).

Routes prefix [/usuario]:


  Summary before generation


You are going to generate a CRUD controller for "AppBundle:Usuario"
using the "annotation" format.

Do you confirm generation [yes]?


  CRUD generation


  created .\src\AppBundle/Controller//UsuarioController.php
  created .\app/Resources/views/usuario/
  created .\app/Resources/views/usuario/index.html.twig
  created .\app/Resources/views/usuario/show.html.twig
  created .\app/Resources/views/usuario/new.html.twig
  created .\app/Resources/views/usuario/edit.html.twig
  created .\src\AppBundle/Tests/Controller//UsuarioControllerTest.php
Generating the CRUD code: OK
  created .\src\AppBundle/Form/UsuarioType.php
Generating the Form code: OK
Updating the routing: OK


  Everything is OK! Now get to work :).


PS C:\xampp7.0\htdocs\sites\mySymfony>